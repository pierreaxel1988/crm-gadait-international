
import { v4 as uuidv4 } from 'uuid';
import { addDoc, collection } from 'firebase/firestore';
import { db } from './firebase';
import { LeadDetailed } from '@/types/lead';
import { processNotificationPreferences } from './utils/leadMappers';

// Create a new lead in the database
export const createLead = async (leadData: LeadDetailed) => {
  try {
    // Generate a unique ID if one doesn't exist
    const leadId = leadData.id || uuidv4();
    
    // Create timestamp for createdAt if it doesn't exist
    const createdAt = leadData.createdAt || new Date().toISOString();
    
    // Process and transform data for the database
    const dbLead = {
      // Base fields
      id: leadId,
      name: leadData.name,
      email: leadData.email || '',
      phone: leadData.phone || '',
      location: leadData.location || '',
      
      // Status and assignment
      status: leadData.status || 'New',
      tags: leadData.tags || [],
      assigned_to: leadData.assignedTo || '',
      
      // Timestamps
      created_at: createdAt,
      last_contacted_at: leadData.lastContactedAt || null,
      next_follow_up_date: leadData.nextFollowUpDate || null,
      
      // Source information
      source: leadData.source || '',
      pipeline_type: leadData.pipelineType || 'purchase',
      external_id: leadData.externalId || '',
      
      // Property details
      property_reference: leadData.propertyReference || '',
      country: leadData.country || '',
      desired_location: leadData.desiredLocation || '',
      property_type: leadData.propertyType || '',
      property_types: leadData.propertyTypes || [],
      bedrooms: leadData.bedrooms || null,
      living_area: leadData.livingArea || '',
      
      // Budget
      budget: leadData.budget || '',
      budget_min: leadData.budgetMin || '',
      currency: leadData.currency || 'EUR',
      
      // Additional preferences
      views: leadData.views || [],
      amenities: leadData.amenities || [],
      purchase_timeframe: leadData.purchaseTimeframe || '',
      financing_method: leadData.financingMethod || '',
      property_use: leadData.propertyUse || '',
      
      // Personal information
      nationality: leadData.nationality || '',
      
      // Task and notes
      task_type: leadData.taskType || null,
      notes: leadData.notes || '',
      url: leadData.url || '',
      
      // Action history
      action_history: leadData.actionHistory || [],
      
      // Notification preferences
      notification_preferences: processNotificationPreferences(leadData.notificationPreferences),
      
      // Timestamps auto-generated by Firestore if not present
      createdAt: createdAt, // Add the missing property
    };
    
    // Add to Firestore collection
    const leadRef = await addDoc(collection(db, 'leads'), dbLead);
    console.log("Lead created with ID: ", leadRef.id);
    
    // Return the created lead data with server-generated ID
    return {
      ...leadData,
      id: leadRef.id,
      createdAt: createdAt
    };
  } catch (error) {
    console.error("Error creating lead: ", error);
    throw error;
  }
};
